// Servi칞o de email simples para teste
// Usa uma API p칰blica gratuita para enviar emails de teste

export const sendTestEmail = async (type, data) => {
  try {
    // Garantir que os dados existem
    const safeData = data || {};
    
    // Dados do email para teste
    const emailData = {
      to: type.includes('Confirma칞칚o') ? 'andreykamilly15@gmail.com' : 'Maisdenoss@gmail.com',
      subject: `Teste - ${type} - Mais de N칩s`,
      message: `
Nova ${type} recebida! 游꿀

DADOS:
${JSON.stringify(safeData, null, 2)}

---
Enviado automaticamente pelo site Mais de N칩s
      `.trim()
    };

    // Simular envio de email (em produ칞칚o, usaria uma API real)
    console.log('游닎 [TESTE] Email seria enviado para:', emailData.to);
    console.log('游닎 [TESTE] Assunto:', emailData.subject);
    console.log('游닎 [TESTE] Dados:', safeData);

    // Simular delay de envio
    await new Promise(resolve => setTimeout(resolve, 500));

    // Retornar sucesso
    return {
      success: true,
      test: true,
      message: `Email de teste ${type} processado com sucesso!`,
      emailData: emailData
    };

  } catch (error) {
    console.error('Erro no envio de email de teste:', error);
    // Mesmo com erro, retornar sucesso para n칚o quebrar o fluxo
    return {
      success: true,
      test: true,
      message: `Email de teste ${type} processado (com aviso)`,
      error: error.message
    };
  }
};

// Fun칞칚o para enviar confirma칞칚o de doa칞칚o
export const sendDonationConfirmation = async (donationData) => {
  return sendTestEmail('Confirma칞칚o de Doa칞칚o', {
    tipo: 'Confirma칞칚o para o doador',
    doador: donationData.nome,
    email: donationData.email,
    telefone: donationData.telefone,
    tipoDoacao: donationData.tipoDoacao,
    descricao: donationData.descricao,
    valor: donationData.valor
  });
};

// Fun칞칚o para notificar organiza칞칚o sobre doa칞칚o
export const notifyOrganizationDonation = async (donationData) => {
  return sendTestEmail('Notifica칞칚o de Doa칞칚o para Organiza칞칚o', {
    tipo: 'Notifica칞칚o para a organiza칞칚o',
    doador: donationData.nome,
    email: donationData.email,
    telefone: donationData.telefone,
    tipoDoacao: donationData.tipoDoacao,
    descricao: donationData.descricao,
    valor: donationData.valor
  });
};

// Fun칞칚o para enviar confirma칞칚o de volunt치rio
export const sendVolunteerConfirmation = async (volunteerData) => {
  return sendTestEmail('Confirma칞칚o de Volunt치rio', {
    tipo: 'Confirma칞칚o para o volunt치rio',
    voluntario: volunteerData.nome,
    email: volunteerData.email,
    telefone: volunteerData.telefone,
    idade: volunteerData.idade,
    areaInteresse: volunteerData.areaInteresse,
    disponibilidade: volunteerData.disponibilidade,
    experiencia: volunteerData.experiencia,
    motivacao: volunteerData.motivacao
  });
};

// Fun칞칚o para notificar organiza칞칚o sobre volunt치rio
export const notifyOrganizationVolunteer = async (volunteerData) => {
  return sendTestEmail('Notifica칞칚o de Volunt치rio para Organiza칞칚o', {
    tipo: 'Notifica칞칚o para a organiza칞칚o',
    voluntario: volunteerData.nome,
    email: volunteerData.email,
    telefone: volunteerData.telefone,
    idade: volunteerData.idade,
    areaInteresse: volunteerData.areaInteresse,
    disponibilidade: volunteerData.disponibilidade,
    experiencia: volunteerData.experiencia,
    motivacao: volunteerData.motivacao
  });
};
